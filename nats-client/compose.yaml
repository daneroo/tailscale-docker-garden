services:
  ts-sidecar:
    # we are now using the unprivileged version of the sidecar
    extends:
      { file: ../common/compose.yaml, service: ts-sidecar-base-unprivileged }
    # we want hostname to be unique for all tailscale sidecars
    # - in our multiple compose files (each havin a sidecar)
    # - but also from different docker hosts (hence HOSTALIS suffix)
    # HOSTALIAS does get set properly when defined in the common/compose.yaml -> ../common/common.env
    # but it does work when defined ENV Variables (and in our Justfile)
    # format: ts-sidecar-<subproject>-<HOSTALIAS>
    hostname: ts-sidecar-nats-client-${HOSTALIAS:-local}
    environment:
      - TS_SOCKS5_SERVER=:1055 # Set SOCKS5 proxy to listen on port 1055
      - TS_TAILSCALED_EXTRA_ARGS=--tun=userspace-networking # Use userspace networking

  nats-publisher:
    image: alpine:latest
    restart: unless-stopped
    network_mode: service:ts-sidecar
    environment:
      # expecting the justfile to set NATS_SERVER_IP
      - NATS_SERVER_IP=${NATS_SERVER_IP}
      - NATS_URL=nats://${NATS_SERVER_IP}:4222
      - NATS_SOCKS_PROXY=socks5://localhost:1055
    # deploy:
    #   mode: replicated
    #   replicas: 2
    command: >
      /bin/sh -c '
      if [ -z "${NATS_SERVER_IP}" ]; then
        echo "NATS_SERVER_IP is not set, exiting";
        exit 1;
      fi;
      apk add --no-cache curl util-linux;
      curl -sfL https://binaries.nats.dev/nats-io/natscli/nats@latest | sh;
      uuidgen > ./uniqueuuid;
      printf "%06d" 1000000 > ./counter;
      while true; do
        ./nats pub ts.broadcast "$(date -u '+%Y-%m-%dT%H:%M:%SZ') - $(cat ./counter) -UUID $(cat ./uniqueuuid)";
        sleep 1;
        printf "%06d" $(($(cat ./counter) + 1)) > ./counter;
      done'

  nats-subscriber:
    image: alpine:latest
    restart: unless-stopped
    network_mode: service:ts-sidecar
    environment:
      # expecting the justfile to set NATS_SERVER_IP
      - NATS_SERVER_IP=${NATS_SERVER_IP}
      - NATS_URL=nats://${NATS_SERVER_IP}:4222
      - NATS_SOCKS_PROXY=socks5://localhost:1055
    command: >
      /bin/sh -c '
      if [ -z "${NATS_SERVER_IP}" ]; then
        echo "NATS_SERVER_IP is not set, exiting";
        exit 1;
      fi;
      apk add --no-cache curl util-linux &&
      curl -sfL https://binaries.nats.dev/nats-io/natscli/nats@latest | sh &&
      ./nats sub -r ts.broadcast'
